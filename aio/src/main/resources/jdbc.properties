jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
jdbc.url=jdbc:oracle:thin:@localhost:1521:xe
jdbc.username=old
jdbc.password=1
hibernate.show_sql=true
hibernate.dialect=org.hibernate.dialect.Oracle10gDialect

#jdbc.driverClass=com.mysql.jdbc.Driver
#jdbc.url=jdbc:mysql://192.168.1.13:3306/test
#jdbc.user=elitech
#jdbc.password=25146875
#jdbc.autoCommitOnClose=true
#hibernate.database=MySQL with InnoDB
#hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect

hibernate.format_sql=false
hibernate.hbm2ddl.auto=update
#hibernate.hbm2ddl.auto=none

hibernate.generate_statistics=true
hibernate.cache.use_second_level_cache=true
hibernate.generate_ddl=true




#<!-- 初始化连接 -->
dataSource.initialSize=10
#<!-- 最大空闲连接 -->
dataSource.maxIdle=20

#<!-- 最小空闲连接 -->
dataSource.minIdle=5

#最大连接数量
dataSource.maxActive=50

#是否在自动回收超时连接的时候打印连接的超时错误
dataSource.logAbandoned=true

#是否自动回收超时连接
dataSource.removeAbandoned=true

#超时时间(以秒数为单位)
#设置超时时间有一个要注意的地方，超时时间=现在的时间-程序中创建Connection的时间，如果 maxActive比较大，比如超过100，那么removeAbandonedTimeout可以设置长一点比如180，也就是三分钟无响应的连接进行 回收，当然应用的不同设置长度也不同。
dataSource.removeAbandonedTimeout=180

#<!-- 超时等待时间以毫秒为单位 -->
#maxWait代表当Connection用尽了，多久之后进行回收丢失连接
dataSource.maxWait=1000